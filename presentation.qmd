---
title: "Exploring Educational Attainment in Your Service Area Using ACS PUMS, R, & Quarto"
subtitle: "OAIRP Spring Conference 2023"
author: "Thomas Jay Benjamin"
format: pptx
params:
    servicearea: "LCCC: Lorain County"
    PUMA1: "00801"
    PUMA2: "00802"
    PUMA3: NULL
    PUMA4: NULL
---

## Today's session

:::: {.columns}
::: {.column}
::: {.incremental}
1. Review the basics of the **American Community Survey**
2. Walkthrough a ***parameterized* report on educational attainment** that you can run for your service area
3. Discuss how the report (*and this presentation!*) were built using **free and mostly open-source software**
:::
:::
::: {.column}
![](https://oairp.org/resources/Pictures/OAIRP%20Spring%202023%20Conference%20Logo%20FINAL%20(1).png)
:::
::::

# Exploring Educational Attainment using the American Community Survey

## American Community Survey

- The **American Community Survey** is an annual survey conducted by the Census Bureau.
- It essentially replaced the long form of the U.S. Census.
- The ACS is a sample of approximately 1% of the U.S. population, with the 5-year data based on a 5% sample.
- The ACS questionnaire includes household and person items.

## Geography

:::: {.columns}

::: {.column}
- The Census Bureau collects data at many levels of geography:^[Read more about Census geographies: <https://www.census.gov/programs-surveys/geography/guidance.html>] 
    - States
    - Metro areas (*Metropolitan Statistical Areas*)
    - Counties
    - Tracts
    - Blocks
    - ... and other combinations of these
:::

::: {.column}
![Census geography hierarchy](images/geographies.png)
:::

::::

## Public Use Microdata Sample

:::: {.columns}

::: {.column}
- The ***Public Use Microdata Sample*** is a subset of ACS responses that are available as survey data files.
- The geography level available for the PUMS is the ***Public Use Microdata Area***.
- PUMAs are typcally made up of Census Tracts, which aggregate to counties.
:::

::: {.column}
![Lorain County PUMAs](images/LC_PUMAs.png)
:::

::::

## Let's pause and check out the Ohio PUMAs

![<https://www.census.gov/geographies/reference-maps/2010/geo/2010-pumas/ohio.html>](images/qrcode_OH_PUMAS.png)


## A bit about the ACS PUMS data
- A de-identified sample - about 2/3 of the overall responses (with minor changes to protect privacy)
- Includes weights to calculate population and household totals
- The [data dictionary](https://www.census.gov/programs-surveys/acs/microdata/documentation.html) provides information on the nearly 200 items (and additional recoded and derived variables)
- ACS PUMS information and data can be accessed here: <https://www.census.gov/programs-surveys/acs/microdata.html>


## Accessing ACS PUMS data

You can access the ACS PUMS data via:

- The online [Microdata Access Tool (MDAT)](https://data.census.gov/mdat/#/)
- The Census Bureau [FTP site](https://www2.census.gov/programs-surveys/acs/data/pums/)
- The [Census Microdata API](https://www.census.gov/data/developers/data-sets/census-microdata-api.html)
    - You can request a free API key at the [Census Developers site](https://www.census.gov/data/developers/guidance.html) ^[Registering for and using a key is required if running 500+ queries, but it is good practice to get and use one nonetheless.]
    - There are open-source software packages that interact with the Census APIs, one of which we will review today.

## Pulling ACS data on Educational Attainment

```{R}
#| include: false

# load necessary libraries
library("tidycensus")
library("tidyverse")
library("survey")
library("srvyr")
library("knitr")
```

```{R}
#| include: false
#| cache: true
# pull ACS PUMS data
pums_data <- get_pums(
    year = 2021,
    variables = c("AGEP", "SCHL", "ESR", "SOCP", "HISP", "RAC1P", "CIT"),
    state = "OH",
    puma = c(params$PUMA1, params$PUMA2,
        params$PUMA3, params$PUMA4), # in YAML params$PUMAs = c("00801","00802")
    survey = "acs5",
    recode = TRUE,
    rep_weights = "person",
    show_call = TRUE
)

# format ACS PUMS as survey data
pums_survey_data <- pums_data %>%
    to_survey(
        type = "person",
        design = "rep_weights"
    ) %>%
    mutate(
        degree = case_when(
            SCHL >= 22 ~ "Graduate degree",
            SCHL >= 21 ~ "Bachelor's degree",
            SCHL == 20 ~ "Associate's degree",
            SCHL >= 18 ~ "Some college, no degree",
            SCHL >= 16 ~ "High school graduate",
            TRUE ~ "Less than high school"
        ),
        degree = factor(degree, c(
                "Less than high school",
                "High school graduate",
                "Some college, no degree",
                "Associate's degree",
                "Bachelor's degree",
                "Graduate degree"
            )
        ),
        has_degree = SCHL >= 20,
        age_gr = case_when(
            AGEP >= 65 ~ "65+",
            AGEP >= 55 ~ "55-64",
            AGEP >= 45 ~ "45-54",
            AGEP >= 35 ~ "35-44",
            AGEP >= 25 ~ "25-34",
            AGEP >= 18 ~ "18-24",
            TRUE ~ "0-17"
        ),
        race_ethn = case_when(
            CIT == "5" ~ "U.S. Nonresident",
            HISP != "01" ~ "Hispanic or Latino",
            RAC1P == "1" ~ "White",
            RAC1P == "2" ~ "Black or African American",
            RAC1P == "9" ~ "Two or more races",
            RAC1P == "6" ~ "Asian",
            RAC1P == "8" ~ "Unknown / some other race",
            RAC1P == "3" | RAC1P == "5" ~ "American Indian or Alaska Native",
            RAC1P == "7" ~ "Native Hawaiian or Pacific Islander",
            TRUE ~ RAC1P
        )
    )
```

:::: {.columns}
::: {.column}
- After data pre-processing, have data for 7 raw variables we'll be using^[Plus recoded variables and additional identifiers] for the PUMAs associated with the service area for `r params$servicearea`.
    - AGEP age
    - CIT citizenship
    - SCHL educational attainment
    - ESR employment status
    - HISP Hispanic/Latino origin
    - RAC1P race
    - SOCP occupation
:::
::: {.column}
```{R}
#| echo: false
pums_survey_data %>%
    group_by(PUMA) %>%
    summarize(
        records = n(),
        weighted = survey_total(vartype = c("ci"), level = 0.95)
    ) %>%
    bind_rows(
        summarize(., across(where(is.numeric), sum),
            across(where(is.character), ~ 'Total')
            )
        ) %>%
    kable(digits = 0, format.args = list(big.mark = ","))
```
:::
::::

## Educational attainment by age group

```{R}
pums_survey_data %>%
    filter(AGEP >= 25 & AGEP < 65) %>%
    group_by(age_gr, degree) %>%
    summarize(n = survey_prop(proportion = TRUE, vartype = c("ci"), level = 0.95)) %>%
    arrange(age_gr, rev(degree)) %>%
    mutate(label_y = cumsum(n)/sum(n)) %>%
    ggplot(aes(fill = degree, x = age_gr, y = n)) +
        geom_bar(position = "fill", stat = "identity", color = "black") +
        scale_fill_brewer(palette = "Blues") +
        geom_text(aes(y = label_y, label = scales::percent(label_y, accuracy = .1), vjust = 1.5)) +
        scale_y_continuous(name = "population educational attainment rate (cumulative)", labels = scales::percent) +
        labs(x = "age group", fill = "educational attainment") 
```

# Demo #1: the report

## How you might use the report

:::: {.columns}

::: {.column}
Open strategic conversations on campus related to:

- Enrollment pipelines and demographic change
- Strategize about reaching disengaged youth
- Building pathways needed to facilitate entry into careers with high replacement need in the near future
:::

::: {.column}
Help IR connect with offices like:

- Workforce Development
- School & Community Partnerships
- Diversity, Equity, & Inclusion
- With additional data:
    - Veterans & Servicemembers Center, Accessibility Services, etc.
:::

::::

# How did we do it?  ACS data using `R`

## Getting started with `R` & Quarto

- You will need (all ***free!***):

    - an installation of the [**`R`**](https://www.r-project.org/) ***statistical software system***
        - We'll need to install a few ***packages*** in the slides that follow

    - an ***IDE***
        - I recommend Microsoft's [**Visual Studio Code**](https://code.visualstudio.com/) but [**RStudio**](https://posit.co/products/open-source/rstudio/) works well too^[Microsoft acknowledges that Visual Studio Code is "Built on Open Source" but the main distribution includes some proprietary Microsoft features]
        - If using Visual Studio Code, install the [**`R` extension for Visual Studio Code**](https://marketplace.visualstudio.com/items?itemName=REditorSupport.r)

    - an installation of the ***publishing system*** [**Quarto**](https://quarto.org/)
        - Quarto will request that you install [**`TinyTex`**](https://yihui.org/tinytex/) and [**`knitr`**](https://yihui.org/knitr/)
        - If using Visual Studio Code, install the [**Quarto extension**](https://marketplace.visualstudio.com/items?itemName=quarto.quarto)

    - *Recommended*: [**Git**](https://git-scm.com/) ***version control system*** and [**GitHub**](https://github.com/) account

## **`tidycensus`** and other useful `R` packages

:::: {.columns}

::: {.column}
[`tidycensus`](https://walker-data.com/tidycensus/) is an `R` package that connects with Census APIs.

![](https://walker-data.com/tidycensus/logo.png)
:::

::: {.column}
[`survyr`](http://gdfe.co/srvyr/) and [`survey`](http://r-survey.r-forge.r-project.org/survey/) work with survey data.

![](http://gdfe.co/srvyr/tools/logo.png)
:::

::::

## About the **`tidyverse`**

:::: {.columns}

::: {.column}
[`tidyverse`](https://www.tidyverse.org/) is a set of `R` packages with a common design that "make data science faster".

`tidycensus` and `survyr` are designed for compatibility with `tidyverse`, using similar grammar and data structure.
:::

::: {.column}
![](https://tidyverse.tidyverse.org/logo.png)
:::

::::

# Demo #2: generating the parameterized report using `R` & Quarto

## A few quick shout-outs

- Hongzhi Ma's workshop on *Application of Propensity Score Matching in Institutional Research* using R at the **Spring 2019 OAIRP Conference** (at LCCC!)

- Meghan Hall's [slides from a July 2022 NEAIR virtual workshop on using R in IR](https://meghan.rbind.io/talk/neair/)  which included parameterized reports and building slides using code

- LCCC Data Analytics student, Tim Kenny, who has been learning to use R and Quarto during an internship with me in LCCC IR


## Questions? [Find me in the OAIRP directory](https://oairp.org/Directory)

:::: {.columns}

::: {.column}
<https://github.com/tbenj/ACS-PUMS-attain>

![Access the resources on GitHub](images/qrcode_github.com.png)
:::

::: {.column}
<https://bit.ly/SurveyOAIRP2023SP>

![Fill out the OAIRP session evaluation](images/OAIRP_eval.png)
:::

::::